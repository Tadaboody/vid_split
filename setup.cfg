[aliases]
test="pytest"

[bumpversion]
current_version = 0.1.0
commit = True
tag = True

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

[bumpversion:file:vid_split/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[bdist_wheel]
universal = 1

[tool:pytest]
mccabe-complexity=6
addopts = --cov-report=term-missing --cov-config=./setup.cfg --cov-report=xml:coverage.xml --lf -v

[flake8]
ignore = W503
exclude =
    .git,
    __pycache__,
    docs/source/conf.py,
    old,
    build,
    dist,
    __init__.py,
    venv
    docs
max-complexity = 10
max-line-length = 90

[coverage:run]
# Run branch coverage testing
branch = True
omit =
    server/database/schema_generator.py
    server/social/social_net.py

[coverage:path]
source =
    server/

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    pass

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't inspect defenitions
    import

sort=Cover
ignore_errors = True

skip_covered=True

[coverage:html]
directory = coverage_html_report

[coverage:xml]
output = cov.xml
